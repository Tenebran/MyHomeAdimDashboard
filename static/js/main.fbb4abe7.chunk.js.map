{"version":3,"sources":["modules/components/AdminPanel/AdminPanel.tsx","api/api.ts","store/blog-reducers.ts","modules/components/BlogPopUp/BlogPopUp.tsx","modules/pages/Blog/BlogItem/BlogItem.tsx","modules/routes/Routes.tsx","modules/components/Header.tsx","modules/pages/Blog/Blog.tsx","store/footer-reduser.ts","modules/pages/Contact/Contact.tsx","store/profile-reducers.ts","modules/pages/Profile/Profile.tsx","modules/pages/Shop/ShopItem/ShopItem.tsx","store/shop-reducers.ts","modules/pages/Shop/Shop.tsx","App.tsx","reportWebVitals.ts","store/store.ts","index.tsx"],"names":["AdminPanel","props","useState","inputPassword","setInputPassword","error","setError","className","TextField","id","label","variant","type","onChange","event","target","value","Button","color","onClick","password","onClickPasswordLogin","instance","axios","create","baseURL","getProfile","get","name","surname","aboutme","video","profession","image","put","getAdress","street","city","mobile","email","paypalme","getShop","title","price","subtitle","post","delete","getBlog","getBlogTC","dispatch","then","res","blog","data","initialState","createdAt","AlertDialog","handleClose","deleteBlogHandler","setOpen","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","PATH","BlogItem","edit","setedit","settitle","setsubtitle","setimage","popupOpen","setPopupOpen","openEditHandler","Grid","item","Paper","elevation","src","multiline","fullWidth","LoadingButton","updateBlogHandler","loadingPosition","startIcon","Header","position","Toolbar","Typography","component","sx","flexGrow","to","MAIN","BLOG","SHOP","IMPRESSUM","Blog","useSelector","state","useDispatch","useEffect","updateBlogTC","deleteBlogTC","Container","fixed","container","spacing","addBlogTC","map","getFooterTC","adress","Contact","contact","footer","setName","setStreet","setCity","setMobile","setEmail","setPaypalme","updateAdress","getProfileDataTC","profile","Profile","setSurname","aboutMe","setAboutMe","setvideo","setProfession","setImage","style","zIndex","url","updateProfileTC","ShopItem","shop","setprice","deleteShopHandler","updateShopHandler","getShopTC","avatar","Shop","updateShopTC","deleteShopTC","addShopTC","Routes","exact","path","render","App","adminPanel","setAdminPanel","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.fbb4abe7.chunk.js","sourcesContent":["import Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport React, { useState } from 'react';\r\nimport './AdminPanel.scss';\r\n\r\nexport const AdminPanel = (props: AdminPanelPropsType) => {\r\n  const [inputPassword, setInputPassword] = useState<string>('');\r\n  const [error, setError] = useState<boolean>(false);\r\n\r\n  const passwordHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setInputPassword(event.target.value);\r\n  };\r\n\r\n  const onClickPasswordLogin = () => {\r\n    if (props.password === inputPassword) {\r\n      props.onClickPasswordLogin(inputPassword);\r\n    } else {\r\n      setError(true);\r\n      setInputPassword('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"AdminPanel\">\r\n        <div className=\"AdminPanel__wrapper\">\r\n          <div className=\"AdminPanel__title\">\r\n            <span className=\"AdminPanel__subtitle\">Admin</span>Panel\r\n          </div>\r\n          <div className=\"AdminPanel__textField\">\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"password\"\r\n              variant=\"outlined\"\r\n              type=\"password\"\r\n              onChange={passwordHandleChange}\r\n              value={inputPassword}\r\n            />\r\n          </div>\r\n          {error ? (\r\n            <div className=\"AdminPanel__error\">incorrect password</div>\r\n          ) : (\r\n            <div className=\"AdminPanel__error\"></div>\r\n          )}\r\n          <div>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={onClickPasswordLogin}>\r\n              Login\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\ntype AdminPanelPropsType = {\r\n  onClickPasswordLogin: (value: string) => void;\r\n  password: string;\r\n};\r\n","import axios from 'axios';\r\n\r\nexport const instance = axios.create({\r\n  baseURL: 'https://61746ce908834f0017c7098a.mockapi.io/myHome',\r\n});\r\n\r\nexport const getProfile = {\r\n  profile() {\r\n    return instance.get<Array<profileType>>('/profil');\r\n  },\r\n  updateProfil(\r\n    name: string,\r\n    surname: string,\r\n    aboutme: string,\r\n    video: string,\r\n    profession: string,\r\n    image: string\r\n  ) {\r\n    return instance.put('/profil/1/', { name, surname, aboutme, video, profession, image });\r\n  },\r\n};\r\n\r\nexport const getAdress = {\r\n  adress() {\r\n    return instance.get<Array<adressType>>('/adress');\r\n  },\r\n  updateAdress(\r\n    name: string,\r\n    street: string,\r\n    city: string,\r\n    mobile: string,\r\n    email: string,\r\n    paypalme: string\r\n  ) {\r\n    return instance.put('/adress/1/', { name, street, city, mobile, email, paypalme });\r\n  },\r\n};\r\n\r\nexport const getShop = {\r\n  shop() {\r\n    return instance.get<Array<ShopType>>('shop');\r\n  },\r\n  addShop(title: string, price: string, image: string, subtitle: string) {\r\n    return instance.post('/shop/', { title, price, image, subtitle });\r\n  },\r\n  deleteShop(id: string) {\r\n    return instance.delete(`/shop/${id}`);\r\n  },\r\n\r\n  updateShop(id: string, title: string, price: string, image: string, subtitle: string) {\r\n    return instance.put(`/shop/${id}`, { title, price, image, subtitle });\r\n  },\r\n};\r\n\r\nexport const getBlog = {\r\n  blog() {\r\n    return instance.get<Array<BlogType>>('/blog');\r\n  },\r\n  updateBlog(id: string, title: string, image: string, subtitle: string) {\r\n    return instance.put(`/blog/${id}/`, {\r\n      title: title,\r\n      image: image,\r\n      subtitle: subtitle,\r\n    });\r\n  },\r\n\r\n  deleteBlog(id: string) {\r\n    return instance.delete(`/blog/${id}`);\r\n  },\r\n\r\n  addBlog(title: string, image: string, subtitle: string) {\r\n    return instance.post(`/blog/`, {\r\n      title: title,\r\n      image: image,\r\n      subtitle: subtitle,\r\n    });\r\n  },\r\n};\r\n\r\nexport type profileType = {\r\n  createdAt: string;\r\n  image: string;\r\n  irma: string;\r\n  name: string;\r\n  profession: string;\r\n  surname: string;\r\n  aboutme: string;\r\n  video: string;\r\n};\r\n\r\nexport type adressType = {\r\n  createdAt: string;\r\n  name: string;\r\n  street: string;\r\n  city: string;\r\n  id: string;\r\n  mobile: string;\r\n  email: string;\r\n  paypalme: string;\r\n};\r\n\r\nexport type ShopType = {\r\n  createdAt: string;\r\n  name: string;\r\n  avatar: string;\r\n  title: string;\r\n  price: string;\r\n  image: string;\r\n  subtitle: string;\r\n  id: string;\r\n};\r\n\r\nexport type BlogType = {\r\n  createdAt: string;\r\n  name: string;\r\n  title: string;\r\n  image: string;\r\n  subtitle: string;\r\n  id: string;\r\n};\r\n","import { Dispatch } from 'redux';\r\nimport { getBlog } from '../api/api';\r\n\r\nexport const blogReducer = (\r\n  state: BlogInitialStateType = initialState,\r\n  action: ActionType\r\n): BlogInitialStateType => {\r\n  switch (action.type) {\r\n    case 'BLOG/GET_BLOG':\r\n      return { ...state, blog: action.blog };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\ntype ActionType = ReturnType<typeof getBlogAC>;\r\n\r\nexport const getBlogAC = (blog: Array<BlogType>) => {\r\n  return { type: 'BLOG/GET_BLOG', blog } as const;\r\n};\r\n\r\nexport const getBlogTC = (): any => (dispatch: Dispatch) => {\r\n  getBlog.blog().then(res => {\r\n    dispatch(getBlogAC(res.data));\r\n  });\r\n};\r\n\r\nexport const updateBlogTC =\r\n  (id: string, title: string, image: string, subtitle: string) => (dispatch: Dispatch) => {\r\n    getBlog.updateBlog(id, title, image, subtitle).then(res => {\r\n      dispatch(getBlogTC());\r\n    });\r\n  };\r\n\r\nexport const deleteBlogTC = (id: string) => (dispatch: Dispatch) => {\r\n  getBlog.deleteBlog(id).then(res => dispatch(getBlogTC()));\r\n};\r\n\r\nexport const addBlogTC =\r\n  (title: string, image: string, subtitle: string) => (dispatch: Dispatch) => {\r\n    getBlog.addBlog(title, image, subtitle).then(res => {\r\n      dispatch(getBlogTC());\r\n    });\r\n  };\r\nexport type BlogInitialStateType = typeof initialState;\r\n\r\nexport type BlogType = {\r\n  createdAt: string;\r\n  name: string;\r\n  title: string;\r\n  image: string;\r\n  subtitle: string;\r\n  id: string;\r\n};\r\n\r\nconst initialState = {\r\n  blog: [\r\n    {\r\n      createdAt: '',\r\n      name: '',\r\n      title: '',\r\n      image: '',\r\n      subtitle: '',\r\n      id: '',\r\n    },\r\n  ],\r\n};\r\n","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport './BlogPopUp.scss';\r\n\r\nexport default function AlertDialog(props: PopUpPropsType) {\r\n  const handleClickOpen = () => {\r\n    props.setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    props.deleteBlogHandler(props.id);\r\n    props.setOpen(false);\r\n  };\r\n\r\n  const handleOnlyClose = () => {\r\n    props.setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{'Delete This Post?'}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            The post <span className=\"popUp__title\">\"{props.title}\"</span> will be deleted\r\n            permanently. Are you sure you want to delete this post?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleOnlyClose}>Disagree</Button>\r\n          <Button onClick={handleClose} autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\ntype PopUpPropsType = {\r\n  open: boolean;\r\n  setOpen: (value: boolean) => void;\r\n  title: string;\r\n  deleteBlogHandler: (id: string) => void;\r\n  id: string;\r\n};\r\n","import Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport React, { useState } from 'react';\r\nimport { BlogType } from '../../../../store/blog-reducers';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport BlogPopUp from '../../../components/BlogPopUp/BlogPopUp';\r\n\r\nexport const BlogItem = (props: BlogItemProps) => {\r\n  const [edit, setedit] = useState<boolean>(false);\r\n  const [title, settitle] = useState<string>(props.blog.title);\r\n  const [subtitle, setsubtitle] = useState<string>(props.blog.subtitle);\r\n  const [image, setimage] = useState<string>(props.blog.image);\r\n  const [popupOpen, setPopupOpen] = useState<boolean>(false);\r\n\r\n  const openEditHandler = () => {\r\n    if (!edit) {\r\n      setedit(true);\r\n    } else {\r\n      setedit(false);\r\n    }\r\n  };\r\n\r\n  const imageHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setimage(event.target.value);\r\n  };\r\n\r\n  const subTitleHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setsubtitle(event.target.value);\r\n  };\r\n  const titleHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    settitle(event.target.value);\r\n  };\r\n\r\n  const onUpdateHandler = () => {\r\n    props.updateBlogHandler(props.blog.id, title, image, subtitle);\r\n    setedit(false);\r\n  };\r\n  return (\r\n    <Grid item key={props.blog.id} className=\"blog\">\r\n      <Paper elevation={5} className=\"blog__paper\">\r\n        <BlogPopUp\r\n          open={popupOpen}\r\n          setOpen={setPopupOpen}\r\n          title={props.blog.title}\r\n          id={props.blog.id}\r\n          deleteBlogHandler={props.deleteBlogHandler}\r\n        />\r\n        <img src={props.blog.image} className=\"blog__image\" />\r\n        <div>\r\n          <span className=\"blog__title\">Title:</span> {props.blog.title}\r\n        </div>\r\n        <div>\r\n          <span>\r\n            <span className=\"blog__title\">Subtitle:</span> {props.blog.subtitle}\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"blog__button_edit\">\r\n          {!edit ? (\r\n            <div className=\"blog__button-wrapper\">\r\n              <Button variant=\"contained\" color=\"secondary\" onClick={() => setPopupOpen(true)}>\r\n                Delete\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={openEditHandler}>\r\n                Edit\r\n              </Button>\r\n            </div>\r\n          ) : (\r\n            ''\r\n          )}\r\n\r\n          {edit ? (\r\n            <>\r\n              <div className=\"blog__editplace\">\r\n                <TextField\r\n                  id=\"standard-basic\"\r\n                  label=\"image\"\r\n                  variant=\"filled\"\r\n                  value={image}\r\n                  multiline\r\n                  fullWidth\r\n                  onChange={imageHandleChange}\r\n                />\r\n                <TextField\r\n                  id=\"outlined-multiline-static\"\r\n                  label=\"title\"\r\n                  variant=\"filled\"\r\n                  multiline\r\n                  fullWidth\r\n                  value={title}\r\n                  onChange={titleHandleChange}\r\n                />\r\n                <TextField\r\n                  id=\"standard-basic\"\r\n                  label=\"subtitle\"\r\n                  variant=\"filled\"\r\n                  multiline\r\n                  fullWidth\r\n                  value={subtitle}\r\n                  onChange={subTitleHandleChange}\r\n                />\r\n              </div>\r\n              <div className=\"blog__button-wrapper\">\r\n                <Button variant=\"contained\" color=\"secondary\" onClick={openEditHandler}>\r\n                  Cancel\r\n                </Button>\r\n                <LoadingButton\r\n                  color=\"secondary\"\r\n                  onClick={onUpdateHandler}\r\n                  loadingPosition=\"start\"\r\n                  startIcon={<SaveIcon />}\r\n                  variant=\"contained\"\r\n                >\r\n                  Save\r\n                </LoadingButton>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            ''\r\n          )}\r\n        </div>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n};\r\n\r\ntype BlogItemProps = {\r\n  blog: BlogType;\r\n  updateBlogHandler: (id: string, title: string, image: string, subtitle: string) => void;\r\n  deleteBlogHandler: (id: string) => void;\r\n};\r\n","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router';\r\nimport { Blog } from '../pages/Blog/Blog';\r\nimport { Contact } from '../pages/Contact/Contact';\r\nimport { Profile } from '../pages/Profile/Profile';\r\nimport { Shop } from '../pages/Shop/Shop';\r\n\r\nexport enum PATH {\r\n  MAIN = '/profile',\r\n  IMPRESSUM = '/contact',\r\n  SHOP = '/shop',\r\n  BLOG = '/blog',\r\n}\r\n\r\nexport const Routes = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path={'/'} render={() => <Redirect to={PATH.MAIN} />} />\r\n      <Route path={PATH.MAIN} component={Profile} />\r\n      <Route exact path={PATH.IMPRESSUM} component={Contact} />\r\n      <Route exact path={PATH.SHOP} component={Shop} />\r\n      <Route exact path={PATH.BLOG} component={Blog} />\r\n    </Switch>\r\n  );\r\n};\r\n","import Box from '@material-ui/core/Box/Box';\r\nimport AppBar from '@material-ui/core/AppBar/AppBar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport React from 'react';\r\nimport './Header.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport { PATH } from '../routes/Routes';\r\n\r\nexport const Header = (props: HeaderPropsType) => {\r\n  return (\r\n    <Box className=\"header\">\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar className=\"header__container\">\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n            <Link\r\n              to={PATH.MAIN}\r\n              className={props.type === 'profile' ? 'header__link_active' : 'header__link'}\r\n            >\r\n              Profile\r\n            </Link>\r\n          </Typography>\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n            <Link\r\n              to={PATH.BLOG}\r\n              className={props.type === 'blog' ? 'header__link_active' : 'header__link'}\r\n            >\r\n              Blog\r\n            </Link>\r\n          </Typography>\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n            <Link\r\n              to={PATH.SHOP}\r\n              className={props.type === 'shop' ? 'header__link_active' : 'header__link'}\r\n            >\r\n              Shop\r\n            </Link>\r\n          </Typography>\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n            <Link\r\n              to={PATH.IMPRESSUM}\r\n              className={props.type === 'contact' ? 'header__link_active' : 'header__link'}\r\n            >\r\n              Contact\r\n            </Link>\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n};\r\n\r\ntype HeaderPropsType = {\r\n  type: string;\r\n};\r\n","import Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n  addBlogTC,\r\n  BlogType,\r\n  deleteBlogTC,\r\n  getBlogTC,\r\n  updateBlogTC,\r\n} from '../../../store/blog-reducers';\r\nimport { AppRootStateType } from '../../../store/store';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './Blog.scss';\r\nimport { BlogItem } from './BlogItem/BlogItem';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport Button from '@material-ui/core/Button';\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport { Header } from '../../components/Header';\r\n\r\nexport const Blog = () => {\r\n  const blog = useSelector<AppRootStateType, Array<BlogType>>(state => state.blog.blog);\r\n  const [title, settitle] = useState<string>('');\r\n  const [subtitle, setsubtitle] = useState<string>('');\r\n  const [image, setimage] = useState<string>('');\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getBlogTC());\r\n  }, []);\r\n\r\n  const imageHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setimage(event.target.value);\r\n  };\r\n\r\n  const subTitleHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setsubtitle(event.target.value);\r\n  };\r\n  const titleHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    settitle(event.target.value);\r\n  };\r\n\r\n  const addBlogCancel = () => {\r\n    setimage('');\r\n    settitle('');\r\n    setsubtitle('');\r\n  };\r\n\r\n  const oncklickAddBlockHandler = () => {\r\n    dispatch(addBlogTC(title, image, subtitle));\r\n    setimage('');\r\n    settitle('');\r\n    setsubtitle('');\r\n  };\r\n\r\n  const updateBlogHandler = (id: string, title: string, image: string, subtitle: string) => {\r\n    dispatch(updateBlogTC(id, title, image, subtitle));\r\n  };\r\n\r\n  const deleteBlogHandler = (id: string) => {\r\n    dispatch(deleteBlogTC(id));\r\n  };\r\n  return (\r\n    <>\r\n      <Header type=\"blog\" />\r\n      <Container fixed>\r\n        <Grid container spacing={5}>\r\n          <Grid item className=\"blog\">\r\n            <Paper elevation={5} className=\"blog__paper\">\r\n              <h1>Add New Post</h1>\r\n              <div className=\"blog__editplace\">\r\n                <TextField\r\n                  id=\"standard-basic\"\r\n                  label=\"image\"\r\n                  variant=\"filled\"\r\n                  value={image}\r\n                  multiline\r\n                  fullWidth\r\n                  onChange={imageHandleChange}\r\n                />\r\n                <TextField\r\n                  id=\"outlined-multiline-static\"\r\n                  label=\"title\"\r\n                  variant=\"filled\"\r\n                  multiline\r\n                  fullWidth\r\n                  value={title}\r\n                  onChange={titleHandleChange}\r\n                />\r\n                <TextField\r\n                  id=\"standard-basic\"\r\n                  label=\"subtitle\"\r\n                  variant=\"filled\"\r\n                  multiline\r\n                  fullWidth\r\n                  value={subtitle}\r\n                  onChange={subTitleHandleChange}\r\n                />\r\n              </div>\r\n              <div className=\"blog__button-wrapper\">\r\n                <Button variant=\"contained\" color=\"secondary\" onClick={addBlogCancel}>\r\n                  Cancel\r\n                </Button>\r\n                <LoadingButton\r\n                  color=\"secondary\"\r\n                  onClick={oncklickAddBlockHandler}\r\n                  loadingPosition=\"start\"\r\n                  startIcon={<SaveIcon />}\r\n                  variant=\"contained\"\r\n                >\r\n                  Save\r\n                </LoadingButton>\r\n              </div>\r\n            </Paper>\r\n          </Grid>\r\n          {blog.map(blog => {\r\n            return (\r\n              <BlogItem\r\n                key={blog.id}\r\n                blog={blog}\r\n                updateBlogHandler={updateBlogHandler}\r\n                deleteBlogHandler={deleteBlogHandler}\r\n              />\r\n            );\r\n          })}\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n","import { adressType, getAdress } from '../api/api';\r\nimport { Dispatch } from 'redux';\r\n\r\nexport const footerReducer = (\r\n  footer: adressType = initialState,\r\n  action: ActionType\r\n): adressType => {\r\n  switch (action.type) {\r\n    case 'FOOTER/GET-FOOTER':\r\n      return {\r\n        ...footer,\r\n        name: action.name,\r\n        street: action.street,\r\n        city: action.city,\r\n        mobile: action.mobile,\r\n        email: action.email,\r\n        paypalme: action.paypalme,\r\n      };\r\n    default:\r\n      return footer;\r\n  }\r\n};\r\n\r\nexport const getFooterAC = (\r\n  name: string,\r\n  street: string,\r\n  city: string,\r\n  mobile: string,\r\n  email: string,\r\n  paypalme: string\r\n) => {\r\n  return { type: 'FOOTER/GET-FOOTER', name, street, city, mobile, email, paypalme } as const;\r\n};\r\n\r\nexport const getFooterTC = (): any => (dispatch: Dispatch) => {\r\n  getAdress.adress().then(res => {\r\n    const adress = res.data[0];\r\n    dispatch(\r\n      getFooterAC(\r\n        adress.name,\r\n        adress.street,\r\n        adress.city,\r\n        adress.mobile,\r\n        adress.email,\r\n        adress.paypalme\r\n      )\r\n    );\r\n  });\r\n};\r\n\r\nexport const updateAdress =\r\n  (name: string, street: string, city: string, mobile: string, email: string, paypalme: string) =>\r\n  (dispatch: Dispatch) => {\r\n    getAdress.updateAdress(name, street, city, mobile, email, paypalme).then(res => {\r\n      dispatch(getFooterTC());\r\n    });\r\n  };\r\n\r\nexport type ActionType = ReturnType<typeof getFooterAC>;\r\n\r\nconst initialState: adressType = {\r\n  createdAt: '',\r\n  name: '',\r\n  street: '',\r\n  city: '',\r\n  id: '',\r\n  mobile: '',\r\n  email: '',\r\n  paypalme: '',\r\n};\r\n","import { TextField } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Header } from '../../components/Header';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport { AppRootStateType } from '../../../store/store';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { adressType } from '../../../api/api';\r\nimport { getFooterTC, updateAdress } from '../../../store/footer-reduser';\r\n\r\nexport const Contact = () => {\r\n  const [edit, setedit] = useState<boolean>(false);\r\n  const contact = useSelector<AppRootStateType, adressType>(state => state.footer);\r\n  const [name, setName] = useState<string>('');\r\n  const [street, setStreet] = useState<string>('');\r\n  const [city, setCity] = useState<string>('');\r\n  const [mobile, setMobile] = useState<string>('');\r\n  const [email, setEmail] = useState<string>('');\r\n  const [paypalme, setPaypalme] = useState<string>('');\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getFooterTC());\r\n  }, [dispatch]);\r\n\r\n  const nameHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const streetHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setStreet(event.target.value);\r\n  };\r\n  const cityMeHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setCity(event.target.value);\r\n  };\r\n  const mobileHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setMobile(event.target.value);\r\n  };\r\n  const emailHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(event.target.value);\r\n  };\r\n\r\n  const paypalmeHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setPaypalme(event.target.value);\r\n  };\r\n\r\n  const openEditHandler = () => {\r\n    if (!edit) {\r\n      setedit(true);\r\n      setName(contact.name);\r\n      setStreet(contact.street);\r\n      setCity(contact.city);\r\n      setMobile(contact.mobile);\r\n      setEmail(contact.email);\r\n      setPaypalme(contact.paypalme);\r\n    } else {\r\n      setedit(false);\r\n    }\r\n  };\r\n\r\n  const onUpdateHandler = () => {\r\n    dispatch(updateAdress(name, street, city, mobile, email, paypalme));\r\n    setedit(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header type={'contact'} />\r\n\r\n      <Grid item className=\"blog\">\r\n        <Paper elevation={5} className=\"blog__paper\">\r\n          <span className=\"blog__title\">Name: </span>\r\n          {contact.name}\r\n          <div>\r\n            <span className=\"blog__title\">Street: </span>\r\n            {contact.street}\r\n          </div>\r\n          <div>\r\n            <span className=\"blog__title\">City: </span>\r\n            {contact.city}\r\n          </div>\r\n          <div>\r\n            <div className=\"wrapper__info\">\r\n              <span>\r\n                <span className=\"blog__title\">Tel: </span>\r\n                {contact.mobile}\r\n              </span>\r\n            </div>\r\n            <div className=\"wrapper__info\">\r\n              <span>\r\n                <span className=\"blog__title\">Email: </span>\r\n                {contact.email}\r\n              </span>\r\n            </div>\r\n            <div className=\"wrapper__info\">\r\n              <span>\r\n                <span className=\"blog__title\">PayPalMe: </span>\r\n                {contact.paypalme}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"blog__button_edit\">\r\n            {!edit ? (\r\n              <div className=\"blog__button-wrapper\">\r\n                <Button variant=\"contained\" color=\"primary\" onClick={openEditHandler}>\r\n                  Edit\r\n                </Button>\r\n              </div>\r\n            ) : (\r\n              ''\r\n            )}\r\n\r\n            {edit ? (\r\n              <>\r\n                <div className=\"blog__editplace\">\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    label=\"Name\"\r\n                    variant=\"filled\"\r\n                    value={name}\r\n                    multiline\r\n                    fullWidth\r\n                    onChange={nameHandleChange}\r\n                  />\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    label=\"Street\"\r\n                    variant=\"filled\"\r\n                    value={street}\r\n                    multiline\r\n                    fullWidth\r\n                    onChange={streetHandleChange}\r\n                  />\r\n                  <TextField\r\n                    id=\"outlined-multiline-static\"\r\n                    label=\"City\"\r\n                    variant=\"filled\"\r\n                    multiline\r\n                    fullWidth\r\n                    value={city}\r\n                    onChange={cityMeHandleChange}\r\n                  />\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    label=\"Tel\"\r\n                    variant=\"filled\"\r\n                    multiline\r\n                    fullWidth\r\n                    value={mobile}\r\n                    onChange={mobileHandleChange}\r\n                  />\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    label=\"Email\"\r\n                    variant=\"filled\"\r\n                    multiline\r\n                    fullWidth\r\n                    value={email}\r\n                    onChange={emailHandleChange}\r\n                  />\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    label=\"PayPalMe\"\r\n                    variant=\"filled\"\r\n                    multiline\r\n                    fullWidth\r\n                    value={paypalme}\r\n                    onChange={paypalmeHandleChange}\r\n                  />\r\n                </div>\r\n                <div className=\"blog__button-wrapper\">\r\n                  <Button variant=\"contained\" color=\"secondary\" onClick={openEditHandler}>\r\n                    Cancel\r\n                  </Button>\r\n                  <LoadingButton\r\n                    color=\"secondary\"\r\n                    onClick={onUpdateHandler}\r\n                    loadingPosition=\"start\"\r\n                    startIcon={<SaveIcon />}\r\n                    variant=\"contained\"\r\n                  >\r\n                    Save\r\n                  </LoadingButton>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              ''\r\n            )}\r\n          </div>\r\n        </Paper>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n","import profileImage from '../modules/common/image/profile-image/profile-image.jpg';\r\nimport { Dispatch } from 'redux';\r\nimport { getProfile } from '../api/api';\r\nimport { profile } from 'console';\r\n\r\nconst initialState: ProfileType = {\r\n  name: '',\r\n  surname: '',\r\n  profession: '',\r\n  image: '',\r\n  aboutme: '',\r\n  video: '',\r\n};\r\n\r\nexport const profileReducers = (\r\n  profile: ProfileType = initialState,\r\n  action: ActionTypeProfile\r\n): ProfileType => {\r\n  switch (action.type) {\r\n    case 'PROFILE/GET_DATA':\r\n      return {\r\n        ...profile,\r\n        name: action.name,\r\n        surname: action.surname,\r\n        profession: action.profession,\r\n        image: action.image,\r\n        aboutme: action.aboutme,\r\n        video: action.video,\r\n      };\r\n\r\n    default:\r\n      return profile;\r\n  }\r\n};\r\n\r\nconst profileDataAC = (\r\n  name: string,\r\n  surname: string,\r\n  profession: string,\r\n  image: string,\r\n  video: string,\r\n  aboutme: string\r\n) => {\r\n  return { type: 'PROFILE/GET_DATA', name, surname, profession, image, video, aboutme } as const;\r\n};\r\n\r\nexport const getProfileDataTC = (): any => (dispatch: Dispatch) => {\r\n  return getProfile.profile().then(res => {\r\n    const profile = res.data[0];\r\n\r\n    dispatch(\r\n      profileDataAC(\r\n        profile.name,\r\n        profile.surname,\r\n        profile.profession,\r\n        profile.image,\r\n        profile.video,\r\n        profile.aboutme\r\n      )\r\n    );\r\n  });\r\n};\r\n\r\nexport const updateProfileTC =\r\n  (\r\n    name: string,\r\n    surname: string,\r\n    aboutme: string,\r\n    video: string,\r\n    profession: string,\r\n    image: string\r\n  ) =>\r\n  (dispatch: Dispatch) => {\r\n    getProfile.updateProfil(name, surname, aboutme, video, profession, image).then(res => {\r\n      dispatch(getProfileDataTC());\r\n    });\r\n  };\r\n\r\nexport type ProfileType = {\r\n  name: string;\r\n  surname: string;\r\n  profession: string;\r\n  image: string;\r\n  aboutme: string;\r\n  video: string;\r\n};\r\n\r\nexport type ActionTypeProfile = ReturnType<typeof profileDataAC>;\r\n","import { TextField } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Header } from '../../components/Header';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport { AppRootStateType } from '../../../store/store';\r\nimport { getProfileDataTC, ProfileType, updateProfileTC } from '../../../store/profile-reducers';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ReactPlayer from 'react-player';\r\n\r\nexport const Profile = () => {\r\n  const [edit, setedit] = useState<boolean>(false);\r\n  const profile = useSelector<AppRootStateType, ProfileType>(state => state.profile);\r\n  const [name, setName] = useState<string>(profile.name);\r\n  const [surname, setSurname] = useState<string>(profile.surname);\r\n  const [aboutMe, setAboutMe] = useState<string>(profile.aboutme);\r\n  const [video, setvideo] = useState<string>(profile.video);\r\n  const [profession, setProfession] = useState(profile.profession);\r\n  const [image, setImage] = useState<string>(profile.image);\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getProfileDataTC());\r\n  }, [dispatch]);\r\n\r\n  const nameHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const surnameHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSurname(event.target.value);\r\n  };\r\n  const aboutMeHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setAboutMe(event.target.value);\r\n  };\r\n  const videoHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setvideo(event.target.value);\r\n  };\r\n  const professionHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setProfession(event.target.value);\r\n  };\r\n\r\n  const imageHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setImage(event.target.value);\r\n  };\r\n\r\n  const openEditHandler = () => {\r\n    if (!edit) {\r\n      setedit(true);\r\n      setName(profile.name);\r\n      setSurname(profile.surname);\r\n      setAboutMe(profile.aboutme);\r\n      setvideo(profile.video);\r\n      setProfession(profile.profession);\r\n      setImage(profile.image);\r\n    } else {\r\n      setedit(false);\r\n    }\r\n  };\r\n\r\n  const onUpdateHandler = () => {\r\n    dispatch(updateProfileTC(name, surname, aboutMe, video, profession, image));\r\n    setedit(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header type={'profile'} />\r\n\r\n      <Grid item className=\"blog\" style={{ zIndex: 2000 }}>\r\n        <Paper elevation={5} className=\"blog__paper\" style={{ zIndex: 2000 }}>\r\n          <img src={profile.image} className=\"blog__image\" />\r\n          <div>\r\n            <span className=\"blog__title\">Live String: </span>\r\n            {profile.profession}\r\n          </div>\r\n          <div>\r\n            <span className=\"blog__title\">Name: </span>\r\n            {profile.name}\r\n          </div>\r\n          <div>\r\n            <div className=\"wrapper__info\">\r\n              <span>\r\n                <span className=\"blog__title\">Surname: </span>\r\n                {profile.surname}\r\n              </span>\r\n            </div>\r\n            <div className=\"wrapper__info\">\r\n              <span>\r\n                <span className=\"blog__title\">AboutMe: </span>\r\n                {profile.aboutme}\r\n              </span>\r\n            </div>\r\n            <div className=\"wrapper__info\">\r\n              <span>\r\n                <span className=\"blog__title\">Video: </span>\r\n                <div className=\"blog__video-wrapper\">\r\n                  <ReactPlayer url={profile.video} />\r\n                </div>\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"blog__button_edit\">\r\n            {!edit ? (\r\n              <div className=\"blog__button-wrapper\">\r\n                <Button variant=\"contained\" color=\"primary\" onClick={openEditHandler}>\r\n                  Edit\r\n                </Button>\r\n              </div>\r\n            ) : (\r\n              ''\r\n            )}\r\n\r\n            {edit ? (\r\n              <>\r\n                <div className=\"blog__editplace\">\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    label=\"image\"\r\n                    variant=\"filled\"\r\n                    value={image}\r\n                    multiline\r\n                    fullWidth\r\n                    onChange={imageHandleChange}\r\n                  />\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    label=\"name\"\r\n                    variant=\"filled\"\r\n                    value={name}\r\n                    multiline\r\n                    fullWidth\r\n                    onChange={nameHandleChange}\r\n                  />\r\n                  <TextField\r\n                    id=\"outlined-multiline-static\"\r\n                    label=\"surname\"\r\n                    variant=\"filled\"\r\n                    multiline\r\n                    fullWidth\r\n                    value={surname}\r\n                    onChange={surnameHandleChange}\r\n                  />\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    label=\"aboutMe\"\r\n                    variant=\"filled\"\r\n                    multiline\r\n                    fullWidth\r\n                    value={aboutMe}\r\n                    onChange={aboutMeHandleChange}\r\n                  />\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    label=\"video\"\r\n                    variant=\"filled\"\r\n                    multiline\r\n                    fullWidth\r\n                    value={video}\r\n                    onChange={videoHandleChange}\r\n                  />\r\n                </div>\r\n                <div className=\"blog__button-wrapper\">\r\n                  <Button variant=\"contained\" color=\"secondary\" onClick={openEditHandler}>\r\n                    Cancel\r\n                  </Button>\r\n                  <LoadingButton\r\n                    color=\"secondary\"\r\n                    onClick={onUpdateHandler}\r\n                    loadingPosition=\"start\"\r\n                    startIcon={<SaveIcon />}\r\n                    variant=\"contained\"\r\n                  >\r\n                    Save\r\n                  </LoadingButton>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              ''\r\n            )}\r\n          </div>\r\n        </Paper>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n","import Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport React, { useState } from 'react';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport BlogPopUp from '../../../components/BlogPopUp/BlogPopUp';\r\nimport { ShopType } from '../../../../store/shop-reducers';\r\n\r\nexport const ShopItem = (props: BlogItemProps) => {\r\n  const [edit, setedit] = useState<boolean>(false);\r\n  const [title, settitle] = useState<string>(props.shop.title);\r\n  const [price, setprice] = useState<string>(props.shop.price);\r\n  const [subtitle, setsubtitle] = useState<string>(props.shop.subtitle);\r\n  const [image, setimage] = useState<string>(props.shop.image);\r\n  const [popupOpen, setPopupOpen] = useState<boolean>(false);\r\n\r\n  const openEditHandler = () => {\r\n    if (!edit) {\r\n      setedit(true);\r\n    } else {\r\n      setedit(false);\r\n    }\r\n  };\r\n\r\n  const imageHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setimage(event.target.value);\r\n  };\r\n\r\n  const subTitleHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setsubtitle(event.target.value);\r\n  };\r\n  const titleHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    settitle(event.target.value);\r\n  };\r\n\r\n  const priceHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setprice(event.target.value);\r\n  };\r\n\r\n  const onUpdateHandler = () => {\r\n    props.updateShopHandler(props.shop.id, title, price, image, subtitle);\r\n    setedit(false);\r\n  };\r\n  return (\r\n    <Grid item key={props.shop.id} className=\"blog\">\r\n      <Paper elevation={5} className=\"blog__paper\">\r\n        <BlogPopUp\r\n          open={popupOpen}\r\n          setOpen={setPopupOpen}\r\n          title={props.shop.title}\r\n          id={props.shop.id}\r\n          deleteBlogHandler={props.deleteShopHandler}\r\n        />\r\n        <img src={props.shop.image} className=\"blog__image\" />\r\n        <div>\r\n          <span className=\"blog__title\">Title:</span> {props.shop.title}\r\n        </div>\r\n        <div>\r\n          <span>\r\n            <span className=\"blog__title\">Subtitle:</span> {props.shop.subtitle}\r\n          </span>\r\n        </div>\r\n        <div>\r\n          <span>\r\n            <span className=\"blog__title\">Price:</span> {props.shop.price}\r\n          </span>\r\n        </div>\r\n        <div className=\"blog__button_edit\">\r\n          {!edit ? (\r\n            <div className=\"blog__button-wrapper\">\r\n              <Button variant=\"contained\" color=\"secondary\" onClick={() => setPopupOpen(true)}>\r\n                Delete\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={openEditHandler}>\r\n                Edit\r\n              </Button>\r\n            </div>\r\n          ) : (\r\n            ''\r\n          )}\r\n\r\n          {edit ? (\r\n            <>\r\n              <div className=\"blog__editplace\">\r\n                <TextField\r\n                  id=\"standard-basic\"\r\n                  label=\"image\"\r\n                  variant=\"filled\"\r\n                  value={image}\r\n                  multiline\r\n                  fullWidth\r\n                  onChange={imageHandleChange}\r\n                />\r\n                <TextField\r\n                  id=\"standard-basic\"\r\n                  label=\"price\"\r\n                  variant=\"filled\"\r\n                  value={price}\r\n                  multiline\r\n                  fullWidth\r\n                  onChange={priceHandleChange}\r\n                />\r\n                <TextField\r\n                  id=\"outlined-multiline-static\"\r\n                  label=\"title\"\r\n                  variant=\"filled\"\r\n                  multiline\r\n                  fullWidth\r\n                  value={title}\r\n                  onChange={titleHandleChange}\r\n                />\r\n                <TextField\r\n                  id=\"standard-basic\"\r\n                  label=\"subtitle\"\r\n                  variant=\"filled\"\r\n                  multiline\r\n                  fullWidth\r\n                  value={subtitle}\r\n                  onChange={subTitleHandleChange}\r\n                />\r\n              </div>\r\n              <div className=\"blog__button-wrapper\">\r\n                <Button variant=\"contained\" color=\"secondary\" onClick={openEditHandler}>\r\n                  Cancel\r\n                </Button>\r\n                <LoadingButton\r\n                  color=\"secondary\"\r\n                  onClick={onUpdateHandler}\r\n                  loadingPosition=\"start\"\r\n                  startIcon={<SaveIcon />}\r\n                  variant=\"contained\"\r\n                >\r\n                  Save\r\n                </LoadingButton>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            ''\r\n          )}\r\n        </div>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n};\r\n\r\ntype BlogItemProps = {\r\n  shop: ShopType;\r\n  updateShopHandler: (\r\n    id: string,\r\n    title: string,\r\n    price: string,\r\n    image: string,\r\n    subtitle: string\r\n  ) => void;\r\n  deleteShopHandler: (id: string) => void;\r\n};\r\n","import { Dispatch } from 'redux';\r\nimport { getShop } from '../api/api';\r\n\r\nexport const shopReducers = (\r\n  shop: ShopInitialStateType = initialState,\r\n  action: ActionType\r\n): ShopInitialStateType => {\r\n  switch (action.type) {\r\n    case 'SHOP/GET_SHOP':\r\n      return { ...shop, shop: action.shop };\r\n\r\n    default: {\r\n      return shop;\r\n    }\r\n  }\r\n};\r\n\r\nexport const getShopsAC = (shop: Array<ShopType>) => {\r\n  return { type: 'SHOP/GET_SHOP', shop } as const;\r\n};\r\n\r\nexport const getShopTC = (): any => (dispatch: Dispatch) => {\r\n  getShop.shop().then(res => {\r\n    dispatch(getShopsAC(res.data));\r\n  });\r\n};\r\n\r\nexport const updateShopTC =\r\n  (id: string, title: string, price: string, image: string, subtitle: string) =>\r\n  (dispatch: Dispatch) => {\r\n    getShop.updateShop(id, title, price, image, subtitle).then(res => {\r\n      dispatch(getShopTC());\r\n    });\r\n  };\r\n\r\nexport const deleteShopTC = (id: string) => (dispatch: Dispatch) => {\r\n  getShop.deleteShop(id).then(res => {\r\n    dispatch(getShopTC());\r\n  });\r\n};\r\n\r\nexport const addShopTC =\r\n  (title: string, price: string, image: string, subtitle: string) => (dispatch: Dispatch) => {\r\n    getShop.addShop(title, price, image, subtitle).then(res => {\r\n      dispatch(getShopTC());\r\n    });\r\n  };\r\n\r\ntype ActionType = ReturnType<typeof getShopsAC>;\r\n\r\nexport type ShopType = {\r\n  createdAt: string;\r\n  name: string;\r\n  avatar: string;\r\n  title: string;\r\n  price: string;\r\n  image: string;\r\n  subtitle: string;\r\n  id: string;\r\n};\r\n\r\nexport type ShopInitialStateType = typeof initialState;\r\n\r\nconst initialState = {\r\n  shop: [\r\n    {\r\n      createdAt: '',\r\n      name: '',\r\n      avatar: '',\r\n      title: '',\r\n      price: '',\r\n      image: '',\r\n      subtitle: '',\r\n      id: '1',\r\n    },\r\n  ],\r\n};\r\n","import Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { AppRootStateType } from '../../../store/store';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport Button from '@material-ui/core/Button';\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport { Header } from '../../components/Header';\r\nimport { ShopItem } from './ShopItem/ShopItem';\r\nimport {\r\n  addShopTC,\r\n  deleteShopTC,\r\n  getShopTC,\r\n  ShopType,\r\n  updateShopTC,\r\n} from '../../../store/shop-reducers';\r\n\r\nexport const Shop = () => {\r\n  const shop = useSelector<AppRootStateType, Array<ShopType>>(state => state.shop.shop);\r\n  const [title, settitle] = useState<string>('');\r\n  const [subtitle, setsubtitle] = useState<string>('');\r\n  const [image, setimage] = useState<string>('');\r\n  const [price, setprice] = useState<string>('');\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getShopTC());\r\n  }, []);\r\n\r\n  const imageHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setimage(event.target.value);\r\n  };\r\n\r\n  const subTitleHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setsubtitle(event.target.value);\r\n  };\r\n  const titleHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    settitle(event.target.value);\r\n  };\r\n\r\n  const priceHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setprice(event.target.value);\r\n  };\r\n\r\n  const addBlogCancel = () => {\r\n    setimage('');\r\n    settitle('');\r\n    setsubtitle('');\r\n  };\r\n\r\n  const oncklickAddShopkHandler = () => {\r\n    dispatch(addShopTC(title, price, image, subtitle));\r\n    setimage('');\r\n    settitle('');\r\n    setsubtitle('');\r\n    setprice('');\r\n  };\r\n\r\n  const updateShopHandler = (\r\n    id: string,\r\n    title: string,\r\n    price: string,\r\n    image: string,\r\n    subtitle: string\r\n  ) => {\r\n    dispatch(updateShopTC(id, title, price, image, subtitle));\r\n  };\r\n\r\n  const deleteShopHandler = (id: string) => {\r\n    dispatch(deleteShopTC(id));\r\n  };\r\n  return (\r\n    <>\r\n      <>\r\n        <Header type=\"shop\" />\r\n        <Container fixed>\r\n          <Grid container spacing={5}>\r\n            <Grid item className=\"blog\">\r\n              <Paper elevation={5} className=\"blog__paper\">\r\n                <h1>Add New Item</h1>\r\n                <div className=\"blog__editplace\">\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    label=\"image\"\r\n                    variant=\"filled\"\r\n                    value={image}\r\n                    multiline\r\n                    fullWidth\r\n                    onChange={imageHandleChange}\r\n                  />\r\n                  <TextField\r\n                    id=\"outlined-multiline-static\"\r\n                    label=\"title\"\r\n                    variant=\"filled\"\r\n                    multiline\r\n                    fullWidth\r\n                    value={title}\r\n                    onChange={titleHandleChange}\r\n                  />\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    label=\"subtitle\"\r\n                    variant=\"filled\"\r\n                    multiline\r\n                    fullWidth\r\n                    value={subtitle}\r\n                    onChange={subTitleHandleChange}\r\n                  />\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    label=\"price\"\r\n                    variant=\"filled\"\r\n                    multiline\r\n                    fullWidth\r\n                    value={price}\r\n                    onChange={priceHandleChange}\r\n                  />\r\n                </div>\r\n                <div className=\"blog__button-wrapper\">\r\n                  <Button variant=\"contained\" color=\"secondary\" onClick={addBlogCancel}>\r\n                    Cancel\r\n                  </Button>\r\n                  <LoadingButton\r\n                    color=\"secondary\"\r\n                    onClick={oncklickAddShopkHandler}\r\n                    loadingPosition=\"start\"\r\n                    startIcon={<SaveIcon />}\r\n                    variant=\"contained\"\r\n                  >\r\n                    Save\r\n                  </LoadingButton>\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n            {shop.map(shop => {\r\n              return (\r\n                <ShopItem\r\n                  key={shop.id}\r\n                  shop={shop}\r\n                  updateShopHandler={updateShopHandler}\r\n                  deleteShopHandler={deleteShopHandler}\r\n                />\r\n              );\r\n            })}\r\n          </Grid>\r\n        </Container>\r\n      </>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport './App.css';\nimport { AdminPanel } from './modules/components/AdminPanel/AdminPanel';\nimport { Header } from './modules/components/Header';\nimport { Blog } from './modules/pages/Blog/Blog';\nimport { Routes } from './modules/routes/Routes';\n\nfunction App() {\n  const [adminPanel, setAdminPanel] = useState<boolean>(false);\n  const password = 'irma2021';\n\n  const onClickPasswordLogin = (inputPassword: string) => {\n    if (password === inputPassword) {\n      setAdminPanel(true);\n      console.log('im Hier');\n    } else {\n      setAdminPanel(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div id=\"stars\"></div>\n      <div id=\"stars2\"></div>\n      <div id=\"stars3\"></div>\n      {adminPanel ? (\n        <>\n          <HashRouter>\n            <Routes />\n          </HashRouter>\n        </>\n      ) : (\n        <AdminPanel password={password} onClickPasswordLogin={onClickPasswordLogin} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { shopReducers } from './shop-reducers';\r\nimport { combineReducers, createStore, applyMiddleware } from 'redux';\r\nimport { ActionTypeProfile, profileReducers } from './profile-reducers';\r\nimport { blogReducer } from './blog-reducers';\r\nimport { footerReducer } from './footer-reduser';\r\nimport thunk, { ThunkAction } from 'redux-thunk';\r\n\r\nconst rootReducer = combineReducers({\r\n  shop: shopReducers,\r\n  profile: profileReducers,\r\n  blog: blogReducer,\r\n  footer: footerReducer,\r\n});\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport type ThunkType = ThunkAction<void, AppRootStateType, unknown, AppActionsType>;\r\n\r\ntype AppActionsType = ActionTypeProfile;\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}