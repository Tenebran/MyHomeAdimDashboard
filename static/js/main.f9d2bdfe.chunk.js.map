{"version":3,"sources":["api/api.ts","store/blog-reducers.ts","modules/components/BlogPopUp/BlogPopUp.tsx","modules/pages/Blog/BlogItem/BlogItem.tsx","modules/routes/Routes.tsx","modules/components/Header.tsx","modules/pages/Blog/Blog.tsx","store/footer-reduser.ts","modules/pages/Contact/Contact.tsx","store/profile-reducers.ts","modules/pages/Profile/Profile.tsx","modules/pages/Shop/Shop.tsx","App.tsx","reportWebVitals.ts","store/shop-reducers.ts","store/store.ts","index.tsx"],"names":["instance","axios","create","baseURL","getProfile","get","name","surname","aboutme","video","profession","put","getAdress","street","city","mobile","email","getBlog","id","title","image","subtitle","delete","post","getBlogTC","dispatch","then","res","type","blog","data","initialState","createdAt","AlertDialog","props","handleClose","deleteBlogHandler","setOpen","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","className","DialogActions","onClick","autoFocus","PATH","BlogItem","useState","edit","setedit","settitle","setsubtitle","setimage","popupOpen","setPopupOpen","openEditHandler","Grid","item","Paper","elevation","src","Button","variant","color","TextField","label","value","multiline","fullWidth","onChange","event","target","LoadingButton","updateBlogHandler","loadingPosition","startIcon","Header","position","Toolbar","Typography","component","sx","flexGrow","to","MAIN","BLOG","SHOP","IMPRESSUM","Blog","useSelector","state","useDispatch","useEffect","updateBlogTC","deleteBlogTC","Container","fixed","container","spacing","addBlogTC","map","getFooterTC","adress","Contact","contact","footer","setName","setStreet","setCity","setMobile","setEmail","updateAdress","getProfileDataTC","profile","Profile","setSurname","aboutMe","setAboutMe","setvideo","setProfession","width","height","frameBorder","allow","allowFullScreen","updateProfileTC","Shop","Routes","exact","path","render","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","shop","avatar","price","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f9d2bdfe.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const instance = axios.create({\r\n  baseURL: 'https://61746ce908834f0017c7098a.mockapi.io/myHome',\r\n});\r\n\r\nexport const getProfile = {\r\n  profile() {\r\n    return instance.get<Array<profileType>>('/profil');\r\n  },\r\n  updateProfil(name: string, surname: string, aboutme: string, video: string, profession: string) {\r\n    return instance.put('/profil/1/', { name, surname, aboutme, video, profession });\r\n  },\r\n};\r\n\r\nexport const getAdress = {\r\n  adress() {\r\n    return instance.get<Array<adressType>>('/adress');\r\n  },\r\n  updateAdress(name: string, street: string, city: string, mobile: string, email: string) {\r\n    return instance.put('/adress/1/', { name, street, city, mobile, email });\r\n  },\r\n};\r\n\r\nexport const getShop = {\r\n  shop() {\r\n    return instance.get<Array<ShopType>>('shop');\r\n  },\r\n};\r\n\r\nexport const getBlog = {\r\n  blog() {\r\n    return instance.get<Array<BlogType>>('/blog');\r\n  },\r\n  updateBlog(id: string, title: string, image: string, subtitle: string) {\r\n    return instance.put(`/blog/${id}/`, {\r\n      title: title,\r\n      image: image,\r\n      subtitle: subtitle,\r\n    });\r\n  },\r\n\r\n  deleteBlog(id: string) {\r\n    return instance.delete(`/blog/${id}`);\r\n  },\r\n\r\n  addBlog(title: string, image: string, subtitle: string) {\r\n    return instance.post(`/blog/`, {\r\n      title: title,\r\n      image: image,\r\n      subtitle: subtitle,\r\n    });\r\n  },\r\n};\r\n\r\nexport type profileType = {\r\n  createdAt: string;\r\n  image: string;\r\n  irma: string;\r\n  name: string;\r\n  profession: string;\r\n  surname: string;\r\n  aboutme: string;\r\n  video: string;\r\n};\r\n\r\nexport type adressType = {\r\n  createdAt: string;\r\n  name: string;\r\n  street: string;\r\n  city: string;\r\n  id: string;\r\n  mobile: string;\r\n  email: string;\r\n};\r\n\r\nexport type ShopType = {\r\n  createdAt: string;\r\n  name: string;\r\n  avatar: string;\r\n  title: string;\r\n  price: string;\r\n  image: string;\r\n  subtitle: string;\r\n  id: string;\r\n};\r\n\r\nexport type BlogType = {\r\n  createdAt: string;\r\n  name: string;\r\n  title: string;\r\n  image: string;\r\n  subtitle: string;\r\n  id: string;\r\n};\r\n","import { Dispatch } from 'redux';\r\nimport { getBlog } from '../api/api';\r\n\r\nexport const blogReducer = (\r\n  state: BlogInitialStateType = initialState,\r\n  action: ActionType\r\n): BlogInitialStateType => {\r\n  switch (action.type) {\r\n    case 'BLOG/GET_BLOG':\r\n      return { ...state, blog: action.blog };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\ntype ActionType = ReturnType<typeof getBlogAC>;\r\n\r\nexport const getBlogAC = (blog: Array<BlogType>) => {\r\n  return { type: 'BLOG/GET_BLOG', blog } as const;\r\n};\r\n\r\nexport const getBlogTC = (): any => (dispatch: Dispatch) => {\r\n  getBlog.blog().then(res => {\r\n    dispatch(getBlogAC(res.data));\r\n  });\r\n};\r\n\r\nexport const updateBlogTC =\r\n  (id: string, title: string, image: string, subtitle: string) => (dispatch: Dispatch) => {\r\n    getBlog.updateBlog(id, title, image, subtitle).then(res => {\r\n      dispatch(getBlogTC());\r\n    });\r\n  };\r\n\r\nexport const deleteBlogTC = (id: string) => (dispatch: Dispatch) => {\r\n  getBlog.deleteBlog(id).then(res => dispatch(getBlogTC()));\r\n};\r\n\r\nexport const addBlogTC =\r\n  (title: string, image: string, subtitle: string) => (dispatch: Dispatch) => {\r\n    getBlog.addBlog(title, image, subtitle).then(res => {\r\n      dispatch(getBlogTC());\r\n    });\r\n  };\r\nexport type BlogInitialStateType = typeof initialState;\r\n\r\nexport type BlogType = {\r\n  createdAt: string;\r\n  name: string;\r\n  title: string;\r\n  image: string;\r\n  subtitle: string;\r\n  id: string;\r\n};\r\n\r\nconst initialState = {\r\n  blog: [\r\n    {\r\n      createdAt: '',\r\n      name: '',\r\n      title: '',\r\n      image: '',\r\n      subtitle: '',\r\n      id: '',\r\n    },\r\n  ],\r\n};\r\n","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport './BlogPopUp.scss';\r\n\r\nexport default function AlertDialog(props: PopUpPropsType) {\r\n  const handleClickOpen = () => {\r\n    props.setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    props.deleteBlogHandler(props.id);\r\n    props.setOpen(false);\r\n  };\r\n\r\n  const handleOnlyClose = () => {\r\n    props.setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{'Delete This Post?'}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            The post <span className=\"popUp__title\">\"{props.title}\"</span> will be deleted\r\n            permanently. Are you sure you want to delete this post?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleOnlyClose}>Disagree</Button>\r\n          <Button onClick={handleClose} autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\ntype PopUpPropsType = {\r\n  open: boolean;\r\n  setOpen: (value: boolean) => void;\r\n  title: string;\r\n  deleteBlogHandler: (id: string) => void;\r\n  id: string;\r\n};\r\n","import Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport React, { useState } from 'react';\r\nimport { BlogType } from '../../../../store/blog-reducers';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport BlogPopUp from '../../../components/BlogPopUp/BlogPopUp';\r\n\r\nexport const BlogItem = (props: BlogItemProps) => {\r\n  const [edit, setedit] = useState<boolean>(false);\r\n  const [title, settitle] = useState<string>(props.blog.title);\r\n  const [subtitle, setsubtitle] = useState<string>(props.blog.subtitle);\r\n  const [image, setimage] = useState<string>(props.blog.image);\r\n  const [popupOpen, setPopupOpen] = useState<boolean>(false);\r\n\r\n  const openEditHandler = () => {\r\n    if (!edit) {\r\n      setedit(true);\r\n    } else {\r\n      setedit(false);\r\n    }\r\n  };\r\n\r\n  const imageHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setimage(event.target.value);\r\n  };\r\n\r\n  const subTitleHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setsubtitle(event.target.value);\r\n  };\r\n  const titleHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    settitle(event.target.value);\r\n  };\r\n\r\n  const onUpdateHandler = () => {\r\n    props.updateBlogHandler(props.blog.id, title, image, subtitle);\r\n    setedit(false);\r\n  };\r\n  return (\r\n    <Grid item key={props.blog.id} className=\"blog\">\r\n      <Paper elevation={5} className=\"blog__paper\">\r\n        <BlogPopUp\r\n          open={popupOpen}\r\n          setOpen={setPopupOpen}\r\n          title={props.blog.title}\r\n          id={props.blog.id}\r\n          deleteBlogHandler={props.deleteBlogHandler}\r\n        />\r\n        <img src={props.blog.image} className=\"blog__image\" />\r\n        <div>\r\n          <span className=\"blog__title\">Title:</span> {props.blog.title}\r\n        </div>\r\n        <div>\r\n          <span>\r\n            <span className=\"blog__title\">Subtitle:</span> {props.blog.subtitle}\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"blog__button_edit\">\r\n          {!edit ? (\r\n            <div className=\"blog__button-wrapper\">\r\n              <Button variant=\"contained\" color=\"secondary\" onClick={() => setPopupOpen(true)}>\r\n                Delete\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={openEditHandler}>\r\n                Edit\r\n              </Button>\r\n            </div>\r\n          ) : (\r\n            ''\r\n          )}\r\n\r\n          {edit ? (\r\n            <>\r\n              <div className=\"blog__editplace\">\r\n                <TextField\r\n                  id=\"standard-basic\"\r\n                  label=\"image\"\r\n                  variant=\"filled\"\r\n                  value={image}\r\n                  multiline\r\n                  fullWidth\r\n                  onChange={imageHandleChange}\r\n                />\r\n                <TextField\r\n                  id=\"outlined-multiline-static\"\r\n                  label=\"title\"\r\n                  variant=\"filled\"\r\n                  multiline\r\n                  fullWidth\r\n                  value={title}\r\n                  onChange={titleHandleChange}\r\n                />\r\n                <TextField\r\n                  id=\"standard-basic\"\r\n                  label=\"subtitle\"\r\n                  variant=\"filled\"\r\n                  multiline\r\n                  fullWidth\r\n                  value={subtitle}\r\n                  onChange={subTitleHandleChange}\r\n                />\r\n              </div>\r\n              <div className=\"blog__button-wrapper\">\r\n                <Button variant=\"contained\" color=\"secondary\" onClick={openEditHandler}>\r\n                  Cancel\r\n                </Button>\r\n                <LoadingButton\r\n                  color=\"secondary\"\r\n                  onClick={onUpdateHandler}\r\n                  loadingPosition=\"start\"\r\n                  startIcon={<SaveIcon />}\r\n                  variant=\"contained\"\r\n                >\r\n                  Save\r\n                </LoadingButton>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            ''\r\n          )}\r\n        </div>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n};\r\n\r\ntype BlogItemProps = {\r\n  blog: BlogType;\r\n  updateBlogHandler: (id: string, title: string, image: string, subtitle: string) => void;\r\n  deleteBlogHandler: (id: string) => void;\r\n};\r\n","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router';\r\nimport { Blog } from '../pages/Blog/Blog';\r\nimport { Contact } from '../pages/Contact/Contact';\r\nimport { Profile } from '../pages/Profile/Profile';\r\nimport { Shop } from '../pages/Shop/Shop';\r\n\r\nexport enum PATH {\r\n  MAIN = '/profile',\r\n  IMPRESSUM = '/contact',\r\n  SHOP = '/shop',\r\n  BLOG = '/blog',\r\n}\r\n\r\nexport const Routes = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path={'/'} render={() => <Redirect to={PATH.MAIN} />} />\r\n      <Route path={PATH.MAIN} component={Profile} />\r\n      <Route exact path={PATH.IMPRESSUM} component={Contact} />\r\n      <Route exact path={PATH.SHOP} component={Shop} />\r\n      <Route exact path={PATH.BLOG} component={Blog} />\r\n    </Switch>\r\n  );\r\n};\r\n","import Box from '@material-ui/core/Box/Box';\r\nimport AppBar from '@material-ui/core/AppBar/AppBar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport React from 'react';\r\nimport './Header.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport { PATH } from '../routes/Routes';\r\n\r\nexport const Header = (props: HeaderPropsType) => {\r\n  return (\r\n    <Box className=\"header\">\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar className=\"header__container\">\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n            <Link\r\n              to={PATH.MAIN}\r\n              className={props.type === 'profile' ? 'header__link_active' : 'header__link'}\r\n            >\r\n              Profile\r\n            </Link>\r\n          </Typography>\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n            <Link\r\n              to={PATH.BLOG}\r\n              className={props.type === 'blog' ? 'header__link_active' : 'header__link'}\r\n            >\r\n              Blog\r\n            </Link>\r\n          </Typography>\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n            <Link\r\n              to={PATH.SHOP}\r\n              className={props.type === 'shop' ? 'header__link_active' : 'header__link'}\r\n            >\r\n              Shop\r\n            </Link>\r\n          </Typography>\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n            <Link\r\n              to={PATH.IMPRESSUM}\r\n              className={props.type === 'contact' ? 'header__link_active' : 'header__link'}\r\n            >\r\n              Contact\r\n            </Link>\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n};\r\n\r\ntype HeaderPropsType = {\r\n  type: string;\r\n};\r\n","import Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n  addBlogTC,\r\n  BlogType,\r\n  deleteBlogTC,\r\n  getBlogTC,\r\n  updateBlogTC,\r\n} from '../../../store/blog-reducers';\r\nimport { AppRootStateType } from '../../../store/store';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './Blog.scss';\r\nimport { BlogItem } from './BlogItem/BlogItem';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport Button from '@material-ui/core/Button';\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport { Header } from '../../components/Header';\r\n\r\nexport const Blog = () => {\r\n  const blog = useSelector<AppRootStateType, Array<BlogType>>(state => state.blog.blog);\r\n  const [title, settitle] = useState<string>('');\r\n  const [subtitle, setsubtitle] = useState<string>('');\r\n  const [image, setimage] = useState<string>('');\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getBlogTC());\r\n  }, []);\r\n\r\n  const imageHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setimage(event.target.value);\r\n  };\r\n\r\n  const subTitleHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setsubtitle(event.target.value);\r\n  };\r\n  const titleHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    settitle(event.target.value);\r\n  };\r\n\r\n  const addBlogCancel = () => {\r\n    setimage('');\r\n    settitle('');\r\n    setsubtitle('');\r\n  };\r\n\r\n  const oncklickAddBlockHandler = () => {\r\n    dispatch(addBlogTC(title, image, subtitle));\r\n    setimage('');\r\n    settitle('');\r\n    setsubtitle('');\r\n  };\r\n\r\n  const updateBlogHandler = (id: string, title: string, image: string, subtitle: string) => {\r\n    dispatch(updateBlogTC(id, title, image, subtitle));\r\n  };\r\n\r\n  const deleteBlogHandler = (id: string) => {\r\n    dispatch(deleteBlogTC(id));\r\n  };\r\n  return (\r\n    <>\r\n      <Header type=\"blog\" />\r\n      <Container fixed>\r\n        <Grid container spacing={5}>\r\n          <Grid item className=\"blog\">\r\n            <Paper elevation={5} className=\"blog__paper\">\r\n              <h1>Add New Post</h1>\r\n              <div className=\"blog__editplace\">\r\n                <TextField\r\n                  id=\"standard-basic\"\r\n                  label=\"image\"\r\n                  variant=\"filled\"\r\n                  value={image}\r\n                  multiline\r\n                  fullWidth\r\n                  onChange={imageHandleChange}\r\n                />\r\n                <TextField\r\n                  id=\"outlined-multiline-static\"\r\n                  label=\"title\"\r\n                  variant=\"filled\"\r\n                  multiline\r\n                  fullWidth\r\n                  value={title}\r\n                  onChange={titleHandleChange}\r\n                />\r\n                <TextField\r\n                  id=\"standard-basic\"\r\n                  label=\"subtitle\"\r\n                  variant=\"filled\"\r\n                  multiline\r\n                  fullWidth\r\n                  value={subtitle}\r\n                  onChange={subTitleHandleChange}\r\n                />\r\n              </div>\r\n              <div className=\"blog__button-wrapper\">\r\n                <Button variant=\"contained\" color=\"secondary\" onClick={addBlogCancel}>\r\n                  Cancel\r\n                </Button>\r\n                <LoadingButton\r\n                  color=\"secondary\"\r\n                  onClick={oncklickAddBlockHandler}\r\n                  loadingPosition=\"start\"\r\n                  startIcon={<SaveIcon />}\r\n                  variant=\"contained\"\r\n                >\r\n                  Save\r\n                </LoadingButton>\r\n              </div>\r\n            </Paper>\r\n          </Grid>\r\n          {blog.map(blog => {\r\n            return (\r\n              <BlogItem\r\n                key={blog.id}\r\n                blog={blog}\r\n                updateBlogHandler={updateBlogHandler}\r\n                deleteBlogHandler={deleteBlogHandler}\r\n              />\r\n            );\r\n          })}\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n","import { adressType, getAdress } from '../api/api';\r\nimport { Dispatch } from 'redux';\r\n\r\nexport const footerReducer = (\r\n  footer: adressType = initialState,\r\n  action: ActionType\r\n): adressType => {\r\n  switch (action.type) {\r\n    case 'FOOTER/GET-FOOTER':\r\n      return {\r\n        ...footer,\r\n        name: action.name,\r\n        street: action.street,\r\n        city: action.city,\r\n        mobile: action.mobile,\r\n        email: action.email,\r\n      };\r\n    default:\r\n      return footer;\r\n  }\r\n};\r\n\r\nexport const getFooterAC = (\r\n  name: string,\r\n  street: string,\r\n  city: string,\r\n  mobile: string,\r\n  email: string\r\n) => {\r\n  return { type: 'FOOTER/GET-FOOTER', name, street, city, mobile, email } as const;\r\n};\r\n\r\nexport const getFooterTC = (): any => (dispatch: Dispatch) => {\r\n  getAdress.adress().then(res => {\r\n    const adress = res.data[0];\r\n    dispatch(getFooterAC(adress.name, adress.street, adress.city, adress.mobile, adress.email));\r\n  });\r\n};\r\n\r\nexport const updateAdress =\r\n  (name: string, street: string, city: string, mobile: string, email: string) =>\r\n  (dispatch: Dispatch) => {\r\n    getAdress.updateAdress(name, street, city, mobile, email).then(res => {\r\n      dispatch(getFooterTC());\r\n    });\r\n  };\r\n\r\nexport type ActionType = ReturnType<typeof getFooterAC>;\r\n\r\nconst initialState: adressType = {\r\n  createdAt: '',\r\n  name: '',\r\n  street: '',\r\n  city: '',\r\n  id: '',\r\n  mobile: '',\r\n  email: '',\r\n};\r\n","import { TextField } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Header } from '../../components/Header';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport { AppRootStateType } from '../../../store/store';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { adressType } from '../../../api/api';\r\nimport { getFooterTC, updateAdress } from '../../../store/footer-reduser';\r\n\r\nexport const Contact = () => {\r\n  const [edit, setedit] = useState<boolean>(false);\r\n  const contact = useSelector<AppRootStateType, adressType>(state => state.footer);\r\n  const [name, setName] = useState<string>('');\r\n  const [street, setStreet] = useState<string>('');\r\n  const [city, setCity] = useState<string>('');\r\n  const [mobile, setMobile] = useState<string>('');\r\n  const [email, setEmail] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getFooterTC());\r\n  }, [dispatch]);\r\n\r\n  const nameHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const streetHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setStreet(event.target.value);\r\n  };\r\n  const cityMeHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setCity(event.target.value);\r\n  };\r\n  const mobileHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setMobile(event.target.value);\r\n  };\r\n  const emailHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(event.target.value);\r\n  };\r\n\r\n  const openEditHandler = () => {\r\n    if (!edit) {\r\n      setedit(true);\r\n      setName(contact.name);\r\n      setStreet(contact.street);\r\n      setCity(contact.city);\r\n      setMobile(contact.mobile);\r\n      setEmail(contact.email);\r\n    } else {\r\n      setedit(false);\r\n    }\r\n  };\r\n\r\n  const onUpdateHandler = () => {\r\n    dispatch(updateAdress(name, street, city, mobile, email));\r\n    setedit(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header type={'profile'} />\r\n\r\n      <Grid item className=\"blog\">\r\n        <Paper elevation={5} className=\"blog__paper\">\r\n          <span className=\"blog__title\">Name: </span>\r\n          {contact.name}\r\n          <div>\r\n            <span className=\"blog__title\">Street: </span>\r\n            {contact.street}\r\n          </div>\r\n          <div>\r\n            <span className=\"blog__title\">City: </span>\r\n            {contact.city}\r\n          </div>\r\n          <div>\r\n            <div className=\"wrapper__info\">\r\n              <span>\r\n                <span className=\"blog__title\">Tel: </span>\r\n                {contact.mobile}\r\n              </span>\r\n            </div>\r\n            <div className=\"wrapper__info\">\r\n              <span>\r\n                <span className=\"blog__title\">Email: </span>\r\n                {contact.email}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"blog__button_edit\">\r\n            {!edit ? (\r\n              <div className=\"blog__button-wrapper\">\r\n                <Button variant=\"contained\" color=\"primary\" onClick={openEditHandler}>\r\n                  Edit\r\n                </Button>\r\n              </div>\r\n            ) : (\r\n              ''\r\n            )}\r\n\r\n            {edit ? (\r\n              <>\r\n                <div className=\"blog__editplace\">\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    label=\"Name\"\r\n                    variant=\"filled\"\r\n                    value={name}\r\n                    multiline\r\n                    fullWidth\r\n                    onChange={nameHandleChange}\r\n                  />\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    label=\"Street\"\r\n                    variant=\"filled\"\r\n                    value={street}\r\n                    multiline\r\n                    fullWidth\r\n                    onChange={streetHandleChange}\r\n                  />\r\n                  <TextField\r\n                    id=\"outlined-multiline-static\"\r\n                    label=\"City\"\r\n                    variant=\"filled\"\r\n                    multiline\r\n                    fullWidth\r\n                    value={city}\r\n                    onChange={cityMeHandleChange}\r\n                  />\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    label=\"Tel\"\r\n                    variant=\"filled\"\r\n                    multiline\r\n                    fullWidth\r\n                    value={mobile}\r\n                    onChange={mobileHandleChange}\r\n                  />\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    label=\"Email\"\r\n                    variant=\"filled\"\r\n                    multiline\r\n                    fullWidth\r\n                    value={email}\r\n                    onChange={emailHandleChange}\r\n                  />\r\n                </div>\r\n                <div className=\"blog__button-wrapper\">\r\n                  <Button variant=\"contained\" color=\"secondary\" onClick={openEditHandler}>\r\n                    Cancel\r\n                  </Button>\r\n                  <LoadingButton\r\n                    color=\"secondary\"\r\n                    onClick={onUpdateHandler}\r\n                    loadingPosition=\"start\"\r\n                    startIcon={<SaveIcon />}\r\n                    variant=\"contained\"\r\n                  >\r\n                    Save\r\n                  </LoadingButton>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              ''\r\n            )}\r\n          </div>\r\n        </Paper>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n","import profileImage from '../modules/common/image/profile-image/profile-image.jpg';\r\nimport { Dispatch } from 'redux';\r\nimport { getProfile } from '../api/api';\r\nimport { profile } from 'console';\r\n\r\nconst initialState: ProfileType = {\r\n  name: '',\r\n  surname: '',\r\n  profession: '',\r\n  image: '',\r\n  aboutme: '',\r\n  video: '',\r\n};\r\n\r\nexport const profileReducers = (\r\n  profile: ProfileType = initialState,\r\n  action: ActionTypeProfile\r\n): ProfileType => {\r\n  switch (action.type) {\r\n    case 'PROFILE/GET_DATA':\r\n      return {\r\n        ...profile,\r\n        name: action.name,\r\n        surname: action.surname,\r\n        profession: action.profession,\r\n        image: action.image,\r\n        aboutme: action.aboutme,\r\n        video: action.video,\r\n      };\r\n\r\n    default:\r\n      return profile;\r\n  }\r\n};\r\n\r\nconst profileDataAC = (\r\n  name: string,\r\n  surname: string,\r\n  profession: string,\r\n  image: string,\r\n  video: string,\r\n  aboutme: string\r\n) => {\r\n  return { type: 'PROFILE/GET_DATA', name, surname, profession, image, video, aboutme } as const;\r\n};\r\n\r\nexport const getProfileDataTC = (): any => (dispatch: Dispatch) => {\r\n  return getProfile.profile().then(res => {\r\n    const profile = res.data[0];\r\n\r\n    dispatch(\r\n      profileDataAC(\r\n        profile.name,\r\n        profile.surname,\r\n        profile.profession,\r\n        profile.image,\r\n        profile.video,\r\n        profile.aboutme\r\n      )\r\n    );\r\n  });\r\n};\r\n\r\nexport const updateProfileTC =\r\n  (name: string, surname: string, aboutme: string, video: string, profession: string) =>\r\n  (dispatch: Dispatch) => {\r\n    getProfile.updateProfil(name, surname, aboutme, video, profession).then(res => {\r\n      dispatch(getProfileDataTC());\r\n    });\r\n  };\r\n\r\nexport type ProfileType = {\r\n  name: string;\r\n  surname: string;\r\n  profession: string;\r\n  image: string;\r\n  aboutme: string;\r\n  video: string;\r\n};\r\n\r\nexport type ActionTypeProfile = ReturnType<typeof profileDataAC>;\r\n","import { TextField } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Header } from '../../components/Header';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport { AppRootStateType } from '../../../store/store';\r\nimport { getProfileDataTC, ProfileType, updateProfileTC } from '../../../store/profile-reducers';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nexport const Profile = () => {\r\n  const [edit, setedit] = useState<boolean>(false);\r\n  const profile = useSelector<AppRootStateType, ProfileType>(state => state.profile);\r\n  const [name, setName] = useState<string>(profile.name);\r\n  const [surname, setSurname] = useState<string>(profile.surname);\r\n  const [aboutMe, setAboutMe] = useState<string>(profile.aboutme);\r\n  const [video, setvideo] = useState<string>(profile.video);\r\n  const [profession, setProfession] = useState(profile.profession);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const nameHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const surnameHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSurname(event.target.value);\r\n  };\r\n  const aboutMeHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setAboutMe(event.target.value);\r\n  };\r\n  const videoHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setvideo(event.target.value);\r\n  };\r\n  const professionHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setProfession(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getProfileDataTC());\r\n  }, [dispatch]);\r\n\r\n  const openEditHandler = () => {\r\n    if (!edit) {\r\n      setedit(true);\r\n      setName(profile.name);\r\n      setSurname(profile.surname);\r\n      setAboutMe(profile.aboutme);\r\n      setvideo(profile.video);\r\n      setProfession(profile.profession);\r\n    } else {\r\n      setedit(false);\r\n    }\r\n  };\r\n\r\n  const onUpdateHandler = () => {\r\n    dispatch(updateProfileTC(name, surname, aboutMe, video, profession));\r\n    setedit(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header type={'profile'} />\r\n\r\n      <Grid item className=\"blog\">\r\n        <Paper elevation={5} className=\"blog__paper\">\r\n          <img src={profile.image} className=\"blog__image\" />{' '}\r\n          <div>\r\n            <span className=\"blog__title\">Live String: </span>\r\n            {profile.profession}\r\n          </div>\r\n          <div>\r\n            <span className=\"blog__title\">Name: </span>\r\n            {profile.name}\r\n          </div>\r\n          <div>\r\n            <div className=\"wrapper__info\">\r\n              <span>\r\n                <span className=\"blog__title\">Surname: </span>\r\n                {profile.surname}\r\n              </span>\r\n            </div>\r\n            <div className=\"wrapper__info\">\r\n              <span>\r\n                <span className=\"blog__title\">AboutMe: </span>\r\n                {profile.aboutme}\r\n              </span>\r\n            </div>\r\n            <div className=\"wrapper__info\">\r\n              <span>\r\n                <span className=\"blog__title\">Video: </span>\r\n                <iframe\r\n                  width=\"300\"\r\n                  height=\"220\"\r\n                  src={profile.video}\r\n                  title=\"YouTube video player\"\r\n                  frameBorder=\"0\"\r\n                  allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                  allowFullScreen\r\n                ></iframe>\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"blog__button_edit\">\r\n            {!edit ? (\r\n              <div className=\"blog__button-wrapper\">\r\n                <Button variant=\"contained\" color=\"primary\" onClick={openEditHandler}>\r\n                  Edit\r\n                </Button>\r\n              </div>\r\n            ) : (\r\n              ''\r\n            )}\r\n\r\n            {edit ? (\r\n              <>\r\n                <div className=\"blog__editplace\">\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    label=\"Live String\"\r\n                    variant=\"filled\"\r\n                    value={profession}\r\n                    multiline\r\n                    fullWidth\r\n                    onChange={professionHandleChange}\r\n                  />\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    label=\"name\"\r\n                    variant=\"filled\"\r\n                    value={name}\r\n                    multiline\r\n                    fullWidth\r\n                    onChange={nameHandleChange}\r\n                  />\r\n                  <TextField\r\n                    id=\"outlined-multiline-static\"\r\n                    label=\"surname\"\r\n                    variant=\"filled\"\r\n                    multiline\r\n                    fullWidth\r\n                    value={surname}\r\n                    onChange={surnameHandleChange}\r\n                  />\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    label=\"aboutMe\"\r\n                    variant=\"filled\"\r\n                    multiline\r\n                    fullWidth\r\n                    value={aboutMe}\r\n                    onChange={aboutMeHandleChange}\r\n                  />\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    label=\"video\"\r\n                    variant=\"filled\"\r\n                    multiline\r\n                    fullWidth\r\n                    value={video}\r\n                    onChange={videoHandleChange}\r\n                  />\r\n                </div>\r\n                <div className=\"blog__button-wrapper\">\r\n                  <Button variant=\"contained\" color=\"secondary\" onClick={openEditHandler}>\r\n                    Cancel\r\n                  </Button>\r\n                  <LoadingButton\r\n                    color=\"secondary\"\r\n                    onClick={onUpdateHandler}\r\n                    loadingPosition=\"start\"\r\n                    startIcon={<SaveIcon />}\r\n                    variant=\"contained\"\r\n                  >\r\n                    Save\r\n                  </LoadingButton>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              ''\r\n            )}\r\n          </div>\r\n        </Paper>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Header } from '../../components/Header';\r\n\r\nexport const Shop = () => {\r\n  return (\r\n    <>\r\n      <Header type=\"shop\" />\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport './App.css';\nimport { Header } from './modules/components/Header';\nimport { Blog } from './modules/pages/Blog/Blog';\nimport { Routes } from './modules/routes/Routes';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <Routes />\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Dispatch } from 'redux';\r\nimport { getShop } from '../api/api';\r\n\r\nexport const shopReducers = (\r\n  shop: ShopInitialStateType = initialState,\r\n  action: ActionType\r\n): ShopInitialStateType => {\r\n  switch (action.type) {\r\n    case 'SHOP/GET_SHOP':\r\n      return { ...shop, shop: action.shop };\r\n\r\n    default: {\r\n      return shop;\r\n    }\r\n  }\r\n};\r\n\r\nexport const getShopsAC = (shop: Array<ShopType>) => {\r\n  return { type: 'SHOP/GET_SHOP', shop } as const;\r\n};\r\n\r\nexport const getShopTC = () => (dispatch: Dispatch) => {\r\n  getShop.shop().then(res => {\r\n    dispatch(getShopsAC(res.data));\r\n  });\r\n};\r\n\r\ntype ActionType = ReturnType<typeof getShopsAC>;\r\n\r\nexport type ShopType = {\r\n  createdAt: string;\r\n  name: string;\r\n  avatar: string;\r\n  title: string;\r\n  price: string;\r\n  image: string;\r\n  subtitle: string;\r\n  id: string;\r\n};\r\n\r\nexport type ShopInitialStateType = typeof initialState;\r\n\r\nconst initialState = {\r\n  shop: [\r\n    {\r\n      createdAt: '',\r\n      name: '',\r\n      avatar: '',\r\n      title: '',\r\n      price: '',\r\n      image: '',\r\n      subtitle: '',\r\n      id: '1',\r\n    },\r\n  ],\r\n};\r\n","import { shopReducers } from './shop-reducers';\r\nimport { combineReducers, createStore, applyMiddleware } from 'redux';\r\nimport { ActionTypeProfile, profileReducers } from './profile-reducers';\r\nimport { blogReducer } from './blog-reducers';\r\nimport { footerReducer } from './footer-reduser';\r\nimport thunk, { ThunkAction } from 'redux-thunk';\r\n\r\nconst rootReducer = combineReducers({\r\n  shop: shopReducers,\r\n  profile: profileReducers,\r\n  blog: blogReducer,\r\n  footer: footerReducer,\r\n});\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport type ThunkType = ThunkAction<void, AppRootStateType, unknown, AppActionsType>;\r\n\r\ntype AppActionsType = ActionTypeProfile;\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}